openapi: 3.0.0
info:
  title: Security Requirement Example
  version: 1.0.0
paths:
  /api/atlas/v2/subscribe:
    get:
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FederationIdentityProvider'
          description: OK
components:
  schemas:
    FederationOidcIdentityProvider:
      type: object
      allOf:
      - $ref: '#/components/schemas/FederationIdentityProvider'
      - type: object
        properties:
          audienceClaim:
            type: array
            description: Identifier of the intended recipient of the token.
            items:
              type: string
          clientId:
            type: string
            description: Client identifier that is assigned to an application by the
              Identity Provider.
          groupsClaim:
            type: string
            description: Identifier of the claim which contains IdP Group IDs in the
              token.
          requestedScopes:
            type: array
            description: "The description of an IdP, configured by customers."
            items:
              type: string
          userClaim:
            type: string
            description: Identifier of the claim which contains the user ID in the
              token.
      required:
      - id
      - oktaIdpId
    FederationSamlIdentityProvider:
      type: object
      allOf:
      - $ref: '#/components/schemas/FederationIdentityProvider'
      - type: object
        properties:
          acsUrl:
            type: string
            description: URL that points to where to send the SAML response.
          audienceUri:
            type: string
            description: Unique string that identifies the intended audience of the
              SAML assertion.
          pemFileInfo:
            $ref: '#/components/schemas/PemFileInfo'
          requestBinding:
            type: string
            description: SAML Authentication Request Protocol HTTP method binding
              (POST or REDIRECT) that Federated Authentication uses to send the authentication
              request.
            enum:
            - HTTP-POST
            - HTTP-REDIRECT
          responseSignatureAlgorithm:
            type: string
            description: Signature algorithm that Federated Authentication uses to
              encrypt the identity provider signature.
            enum:
            - SHA-1
            - SHA-256
          ssoDebugEnabled:
            type: boolean
            description: Flag that indicates whether the identity provider has SSO
              debug enabled.
          ssoUrl:
            type: string
            description: URL that points to the receiver of the SAML authentication
              request.
          status:
            type: string
            description: String enum that indicates whether the identity provider
              is active.
            enum:
            - ACTIVE
            - INACTIVE
      required:
      - id
      - oktaIdpId
    FederationIdentityProvider:
      type: object
      discriminator:
        mapping:
          OIDC: '#/components/schemas/FederationOidcIdentityProvider'
          SAML: '#/components/schemas/FederationSamlIdentityProvider'
        propertyName: protocol
      oneOf:
      - $ref: '#/components/schemas/FederationSamlIdentityProvider'
      - $ref: '#/components/schemas/FederationOidcIdentityProvider'
      properties:
        associatedDomains:
          type: array
          description: List that contains the domains associated with the identity
            provider.
          items:
            type: string
          uniqueItems: true
        associatedOrgs:
          type: array
          description: List that contains the connected organization configurations
            associated with the identity provider.
          items:
            $ref: '#/components/schemas/ConnectedOrgConfig'
          uniqueItems: true
        description:
          type: string
          description: The description of the identity provider.
        displayName:
          type: string
          description: Human-readable label that identifies the identity provider.
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the identity
            provider.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: "^([a-f0-9]{24})$"
          readOnly: true
        issuerUri:
          type: string
          description: Unique string that identifies the issuer of the SAML Assertion.
        oktaIdpId:
          type: string
          description: Unique 20-hexadecimal digit string that identifies the identity
            provider.
          maxLength: 20
          minLength: 20
          pattern: "^([a-f0-9]{20})$"
        protocol:
          type: string
          description: The protocol of the identity provider.
      required:
      - id
      - oktaIdpId
    ConnectedOrgConfig:
      type: object
      properties:
        dataAccessIdentityProviderIds:
          type: array
          description: The collection of unique ids representing the identity providers
            that can be used for data access in this organization.
          items:
            type: string
            description: Unique 24-hexadecimal digit string that represents the id
              of the identity providers that can be used for data access in this organization.
            example: 32b6e34b3d91647abb20e7b8
            maxLength: 24
            minLength: 24
            pattern: "^([a-f0-9]{24})$"
          uniqueItems: true
        domainAllowList:
          type: array
          description: Approved domains that restrict users who can join the organization
            based on their email address.
          items:
            type: string
          uniqueItems: true
        domainRestrictionEnabled:
          type: boolean
          description: Value that indicates whether domain restriction is enabled
            for this connected org.
        identityProviderId:
          type: string
          description: Unique 20-hexadecimal digit string that identifies the identity
            provider that this connected org config is associated with.
          maxLength: 20
          minLength: 20
          pattern: "^([a-f0-9]{20})$"
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the connected
            organization configuration.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: "^([a-f0-9]{24})$"
          readOnly: true
        postAuthRoleGrants:
          type: array
          description: Atlas roles that are granted to a user in this organization
            after authenticating. Roles are a human-readable label that identifies
            the collection of privileges that MongoDB Cloud grants a specific MongoDB
            Cloud user. These roles can only be organization specific roles.
          items:
            type: string
            enum:
            - ORG_OWNER
            - ORG_MEMBER
            - ORG_GROUP_CREATOR
            - ORG_BILLING_ADMIN
            - ORG_BILLING_READ_ONLY
            - ORG_READ_ONLY
          uniqueItems: true
        roleMappings:
          type: array
          description: Role mappings that are configured in this organization.
          items:
            $ref: '#/components/schemas/AuthFederationRoleMapping'
          uniqueItems: true
        userConflicts:
          type: array
          description: List that contains the users who have an email address that
            doesn't match any domain on the allowed list.
          items:
            $ref: '#/components/schemas/FederatedUser'
      required:
      - domainRestrictionEnabled
      - identityProviderId
      - orgId
    AuthFederationRoleMapping:
      type: object
      description: Mapping settings that link one IdP and MongoDB Cloud.
      properties:
        externalGroupName:
          type: string
          description: Unique human-readable label that identifies the identity provider
            group to which this role mapping applies.
          maxLength: 200
          minLength: 1
        id:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this role
            mapping.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: "^([a-f0-9]{24})$"
          readOnly: true
        roleAssignments:
          type: array
          description: Atlas roles and the unique identifiers of the groups and organizations
            associated with each role.
          items:
            $ref: '#/components/schemas/RoleAssignment'
          uniqueItems: true
      required:
      - externalGroupName
      title: Federated Authentication Role Mapping
    AutoExportPolicyView:
      type: object
      description: Policy for automatically exporting cloud backup snapshots.
      properties:
        exportBucketId:
          type: string
          description: Unique 24-hexadecimal character string that identifies the
            AWS Bucket.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: "^([a-f0-9]{24})$"
        frequencyType:
          type: string
          description: Human-readable label that indicates the rate at which the export
            policy item occurs.
          enum:
          - monthly
      title: export
    RoleAssignment:
      type: object
      properties:
        groupId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the project
            to which this role belongs. You can set a value for this parameter or
            **orgId** but not both in the same request.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: "^([a-f0-9]{24})$"
        orgId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the organization
            to which this role belongs. You can set a value for this parameter or
            **groupId** but not both in the same request.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: "^([a-f0-9]{24})$"
        role:
          type: string
          description: |+
            Human-readable label that identifies the collection of privileges that MongoDB Cloud grants a specific API key, MongoDB Cloud user, or MongoDB Cloud team. These roles include organization- and project-level roles.

            Organization Roles

            * ORG_OWNER
            * ORG_MEMBER
            * ORG_GROUP_CREATOR
            * ORG_BILLING_ADMIN
            * ORG_READ_ONLY

            Project Roles

            * GROUP_CLUSTER_MANAGER
            * GROUP_DATA_ACCESS_ADMIN
            * GROUP_DATA_ACCESS_READ_ONLY
            * GROUP_DATA_ACCESS_READ_WRITE
            * GROUP_OWNER
            * GROUP_READ_ONLY
            * GROUP_SEARCH_INDEX_EDITOR
            * GROUP_STREAM_PROCESSING_OWNER

          enum:
          - ORG_OWNER
          - ORG_MEMBER
          - ORG_GROUP_CREATOR
          - ORG_BILLING_ADMIN
          - ORG_READ_ONLY
          - GROUP_CLUSTER_MANAGER
          - GROUP_DATA_ACCESS_ADMIN
          - GROUP_DATA_ACCESS_READ_ONLY
          - GROUP_DATA_ACCESS_READ_WRITE
          - GROUP_OWNER
          - GROUP_READ_ONLY
          - GROUP_SEARCH_INDEX_EDITOR
          - GROUP_STREAM_PROCESSING_OWNER
    FederatedUser:
      type: object
      description: MongoDB Cloud user linked to this federated authentication.
      properties:
        emailAddress:
          type: string
          format: email
          description: Email address of the MongoDB Cloud user linked to the federated
            organization.
        federationSettingsId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies the federation
            to which this MongoDB Cloud user belongs.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: "^([a-f0-9]{24})$"
        firstName:
          type: string
          description: First or given name that belongs to the MongoDB Cloud user.
        lastName:
          type: string
          description: "Last name, family name, or surname that belongs to the MongoDB\
            \ Cloud user."
        userId:
          type: string
          description: Unique 24-hexadecimal digit string that identifies this user.
          maxLength: 24
          minLength: 24
          pattern: "^([a-f0-9]{24})$"
          readOnly: true
      required:
      - emailAddress
      - federationSettingsId
      - firstName
      - lastName
      title: Federated User
    PemFileInfo:
      type: object
      description: PEM file information for the identity provider's current certificates.
      properties:
        certificates:
          type: array
          description: List of certificates in the file.
          items:
            $ref: '#/components/schemas/X509Certificate'
        fileName:
          type: string
          description: Human-readable label given to the file.
    X509Certificate:
      type: object
      properties:
        notAfter:
          type: string
          format: date-time
          description: Latest date that the certificate is valid.
        notBefore:
          type: string
          format: date-time
          description: Earliest date that the certificate is valid.